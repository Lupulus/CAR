package Command;

import java.io.DataInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import Request.FtpRequest;

public class CommandStor extends Command{

	public CommandStor(FtpRequest ftp,String filename) {
		super(ftp);
		process(filename);
	}
	
	public void process(String filename){
		File file = new File(ftp.getCurrentDirectory().getAbsolutePath() + "/" + filename);
		//System.out.println(file.toString());
		try(FileOutputStream os = new FileOutputStream(file)) {
			this.receiveFromClient(os);
		} catch(IOException e) {
			ftp.send(426, "Connection closed, transfert aborted");
			return;
		}
	}
	
	
	public void receiveFromClient(OutputStream data) {
		InputStream stream = null;
		DataInputStream dataB = null;
		try {
			// dÃ©but d'utilisation de la connexion
			ftp.send(125, "Data connection already open; transfer starting.");

			dataB = new DataInputStream(ftp.getSocket().getInputStream());
			
			int n;
			byte[] buffer = new byte[1024];
			while((n = dataB.read(buffer)) > -1) {
				data.write(buffer, 0, n);
			}
			
			
			
			ftp.send(226,"Data transfered succesfully. Data connection closed.");
		} catch(IOException  e) {
			ftp.send(426, "Connection closed, transfert aborted");
		}
		try { if (stream != null) stream.close(); } catch(IOException e) { }
	}
}
